;; -*- text -*-

2024.219

 * have exit_on_error() decorator
 * linewrap function (not yet exported by default)

2023.1212:
 * Multiset.counts()

2023.1023:
>>>>>>> 8f1efc4ab8cdf93875c0e5c79c73e623c81c00de

2023.1023:
 * make default fatal error label a bit more streamlined

2023.622:

 * have ovc_help() take an exit_status argument

2023.621:

 * system() (but no tests yet)

2023.509:

 * tests for read_mapping(), restoring full coverage

2023.508:

 * take "-" as a normal argument that stops option processing
 * make "Fatal" error label configurable

2022.904:

 * read_mapping()

2022.815:

 * remove the remains of the pgetopt package in _morgue/

 * finalise the assimilation of the former pgetopt package: renamed
   jpylib/pgetopt.py => jpylib/options.py, replaced pgetopt.parse
   references by pgetopts

2022.812:

 * pgetopts() documentation improvements

 * document end of separate pgetopt releases

 * more compact pgetopts help (close issue #27)

2022.811:

 * fix: have putsecret() cope with non-existing secrets file

 * more dict-like methods for Namespace

 * smallish aesthetic fixes and doc improvements

2021-1217:

 * inputFrom() context manager to redirect sys.stdin

 * all_input_lines() returns input from all file arguments, or
   stdin, like Perl's diamond operator (<>)

 * get/putsecret() check secrets file mode

 * a few numeric/statistics functions

 * improved documentation

 * increased test coverage to 100 %

2021-0430:

 * started more detailed jpylib documentation

 * isotime_ms()

2020-1011:

 * context manager temporary_alert_level()

2020-920:

 * Singleton metaclass

 * Alert functions tracef, debugf, infof, noticef, errorf, fatalf
   that print according to their level, taking a format string
   argument and the format parameters.

2020-910:

 * Table alignment argument now a string only, consisting of one or
   two alignment descriptors, comma-separated, for either both or
   the first and following rows.

2020-901:

 * Table formatter

 * functions is_num(), maybe_num() (for floats as well as ints)

2020-829:

 * Removed the terminal_size() function as I learned about
   os.get_terminal_size(), which has the exact same call signature,
   except it doesn't swallow the OSError exception when stdout is
   not a terminal.

 * function flatten() to flatten sequences (e.g. for counting)

 * functions is_int(), maybe_int()

 * functions isotime(), iso_time(), iso_time_ms(), iso_time_us() for
   formatting ISO time strings; also optional timestamps for alerts

Never mind previous versions.
